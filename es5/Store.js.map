{"version":3,"sources":["../src/Store.js"],"names":["Store","onChangeCallbacks","__anyChange","state","__time","Date","now","stateHistory","concat","index","length","newState","historyMode","oldState","assign","changes","getChangeList","forEach","o","property","newProperty","oldProperty","_triggerChangeCallbacks","push","callback","undefined","console","error","callbackList","pull","newValue","oldValue","fullHistory","getFullHistory","i","getChangeLog","join","isNew","log","map"],"mappings":"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","file":"Store.js","sourcesContent":["/**\r\n * Created by sam_g on 2/7/2017.\r\n */\r\nimport _ from 'lodash';\r\nimport areEqual from 'fbjs/lib/areEqual';\r\n\r\nexport class Store{\r\n    constructor(){\r\n        this.onChangeCallbacks = {\r\n            __anyChange: []\r\n        };\r\n        this.state = {\r\n            __time: Date.now()\r\n        };\r\n        this.stateHistory = [];\r\n    }\r\n\r\n    getFullHistory(){\r\n        return _.concat(this.stateHistory, [this.state]);\r\n    }\r\n\r\n    getPreviousState(){\r\n        let index = this.stateHistory.length - 1;\r\n\r\n        return this.stateHistory[index];\r\n    }\r\n\r\n    setState(newState, historyMode = true){\r\n\r\n        // Save the old state\r\n        let oldState = this.state;\r\n\r\n        // Update the state\r\n        this.state = _.assign({}, oldState, newState);\r\n\r\n        let changes = Store.getChangeList(oldState, this.state);\r\n\r\n        // Loop through list of changes and trigger their respective callbacks\r\n        changes.forEach((o)=>{\r\n            // Get the name of the changed property\r\n            let {property} = o;\r\n\r\n            // Get the new and old values of the property\r\n            let newProperty = this.state[property];\r\n            let oldProperty = oldState[property];\r\n\r\n            // Trigger the property's callback\r\n            this._triggerChangeCallbacks(property, newProperty, oldProperty);\r\n        });\r\n\r\n        if(changes.length){\r\n            //\r\n            this.state.__time = Date.now();\r\n\r\n            if(historyMode == true){\r\n                this.stateHistory.push(oldState);\r\n            }\r\n\r\n            this._triggerChangeCallbacks(\"__anyChange\", this.state, oldState);\r\n        }\r\n    }\r\n\r\n    subscribeToChanges(callback, property = \"__anyChange\"){\r\n        if(this.onChangeCallbacks[property] == undefined) this.onChangeCallbacks[property] = [];\r\n\r\n        if(typeof callback != \"function\"){\r\n            console.error(\"Callback given is not a function as expected\");\r\n        }else {\r\n            this.onChangeCallbacks[property].push(callback);\r\n        }\r\n    }\r\n\r\n    unSubscribeToChanges(callback, property = \"__anyChange\"){\r\n        let callbackList = this.onChangeCallbacks[property];\r\n        if(callbackList == undefined) return;\r\n\r\n        this.onChangeCallbacks[property] = _.pull(callbackList, callback);\r\n    }\r\n\r\n    static getChangeList(oldState, newState){\r\n        // Loop through state properties looking for changes\r\n        let changes = [];\r\n        for(let property in newState){\r\n            let newProperty = newState[property];\r\n            let oldProperty = oldState[property];\r\n\r\n            // Generate change list\r\n            if(!areEqual(newProperty, oldProperty)){\r\n                changes.push({\r\n                    property: property,\r\n                    isNew: oldProperty == undefined || oldProperty == null\r\n                });\r\n            }\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    static getChangeLog(oldState, newState){\r\n        let changes = this.getChangeList(oldState, newState);\r\n        let log = changes.map((o)=>{\r\n            if(o.isNew) return`Added new property \"${o.property}\"`;\r\n            else return`Changed value of \"${o.property}\"`;\r\n        });\r\n\r\n\r\n        return log.join(\"\\n\");\r\n    }\r\n\r\n    _triggerChangeCallbacks(property, newValue, oldValue){\r\n        if(!this.onChangeCallbacks[property]) return;\r\n\r\n        this.onChangeCallbacks[property].forEach((callback)=>callback(newValue, oldValue, property));\r\n    }\r\n\r\n    getChangeLog(){\r\n        let fullHistory = this.getFullHistory();\r\n        let changes = [\"\"];\r\n\r\n        fullHistory.forEach((o, i)=>{\r\n            if(i == 0) return;\r\n\r\n            changes.push(Store.getChangeLog(fullHistory[i-1], o));\r\n        });\r\n\r\n        return changes.join(\"\\n------------\\n\");\r\n    }\r\n}\r\n\r\nexport default Store;"]}