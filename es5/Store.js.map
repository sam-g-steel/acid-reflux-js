{"version":3,"sources":["../src/Store.js"],"names":["Store","onChangeCallbacks","__anyChange","state","__time","Date","now","stateHistory","concat","index","length","newState","historyMode","oldState","assign","anyChanges","property","newProperty","oldProperty","triggerChangeCallbacks","push","callback","undefined","console","error","newValue","oldValue","forEach","callbackList","pull"],"mappings":";;;;;;;qjBAAA;;;;;AAGA;;;;AACA;;;;;;;;IAEaA,K,WAAAA,K;AACT,qBAAa;AAAA;;AACT,aAAKC,iBAAL,GAAyB;AACrBC,yBAAa;AADQ,SAAzB;AAGA,aAAKC,KAAL,GAAa;AACTC,oBAAQC,KAAKC,GAAL;AADC,SAAb;AAGA,aAAKC,YAAL,GAAoB,EAApB;AACH;;;;yCAEe;AACZ,mBAAO,iBAAEC,MAAF,CAAS,KAAKD,YAAd,EAA4B,CAAC,KAAKJ,KAAN,CAA5B,CAAP;AACH;;;2CAEiB;AACd,gBAAIM,QAAQ,KAAKF,YAAL,CAAkBG,MAAlB,GAA2B,CAAvC;;AAEA,mBAAO,KAAKH,YAAL,CAAkBE,KAAlB,CAAP;AACH;;;iCAEQE,Q,EAA6B;AAAA,gBAAnBC,WAAmB,uEAAL,IAAK;;;AAElC;AACA,gBAAIC,WAAW,KAAKV,KAApB;;AAEA;AACA,iBAAKA,KAAL,GAAa,iBAAEW,MAAF,CAAS,EAAT,EAAaD,QAAb,EAAuBF,QAAvB,CAAb;;AAEA;AACA,gBAAII,aAAa,KAAjB;AACA,iBAAI,IAAIC,QAAR,IAAoB,KAAKb,KAAzB,EAA+B;AAC3B,oBAAIc,cAAc,KAAKd,KAAL,CAAWa,QAAX,CAAlB;AACA,oBAAIE,cAAcL,SAASG,QAAT,CAAlB;;AAEA;AACA,oBAAG,CAAC,wBAASC,WAAT,EAAsBC,WAAtB,CAAJ,EAAuC;AACnC,yBAAKC,sBAAL,CAA4BH,QAA5B,EAAsCC,WAAtC,EAAmDC,WAAnD;AACAH,iCAAa,IAAb;AACH;AACJ;;AAED,gBAAGA,UAAH,EAAc;AACV;AACA,qBAAKZ,KAAL,CAAWC,MAAX,GAAoBC,KAAKC,GAAL,EAApB;;AAEA,oBAAGM,eAAe,IAAlB,EAAuB;AACnB,yBAAKL,YAAL,CAAkBa,IAAlB,CAAuBP,QAAvB;AACH;;AAED,qBAAKM,sBAAL,CAA4B,aAA5B,EAA2C,KAAKhB,KAAhD,EAAuDU,QAAvD;AACH;AACJ;;;2CAEkBQ,Q,EAAmC;AAAA,gBAAzBL,QAAyB,uEAAd,aAAc;;AAClD,gBAAG,KAAKf,iBAAL,CAAuBe,QAAvB,KAAoCM,SAAvC,EAAkD,KAAKrB,iBAAL,CAAuBe,QAAvB,IAAmC,EAAnC;;AAElD,gBAAG,OAAOK,QAAP,IAAmB,UAAtB,EAAiC;AAC7BE,wBAAQC,KAAR,CAAc,8CAAd;AACH,aAFD,MAEM;AACF,qBAAKvB,iBAAL,CAAuBe,QAAvB,EAAiCI,IAAjC,CAAsCC,QAAtC;AACH;AACJ;;;+CAEsBL,Q,EAAUS,Q,EAAUC,Q,EAAS;AAChD,gBAAG,CAAC,KAAKzB,iBAAL,CAAuBe,QAAvB,CAAJ,EAAsC;;AAEtC,iBAAKf,iBAAL,CAAuBe,QAAvB,EAAiCW,OAAjC,CAAyC,UAACN,QAAD;AAAA,uBAAYA,SAASI,QAAT,EAAmBC,QAAnB,EAA6BV,QAA7B,CAAZ;AAAA,aAAzC;AACH;;;6CAEoBK,Q,EAAmC;AAAA,gBAAzBL,QAAyB,uEAAd,aAAc;;AACpD,gBAAIY,eAAe,KAAK3B,iBAAL,CAAuBe,QAAvB,CAAnB;AACA,gBAAGY,gBAAgBN,SAAnB,EAA8B;;AAE9B,iBAAKrB,iBAAL,CAAuBe,QAAvB,IAAmC,iBAAEa,IAAF,CAAOD,YAAP,EAAqBP,QAArB,CAAnC;AACH;;;;;;kBAGUrB,K","file":"Store.js","sourcesContent":["/**\r\n * Created by sam_g on 2/7/2017.\r\n */\r\nimport _ from 'lodash';\r\nimport areEqual from 'fbjs/lib/areEqual';\r\n\r\nexport class Store{\r\n    constructor(){\r\n        this.onChangeCallbacks = {\r\n            __anyChange: []\r\n        };\r\n        this.state = {\r\n            __time: Date.now()\r\n        };\r\n        this.stateHistory = [];\r\n    }\r\n\r\n    getFullHistory(){\r\n        return _.concat(this.stateHistory, [this.state]);\r\n    }\r\n\r\n    getPreviousState(){\r\n        let index = this.stateHistory.length - 1;\r\n\r\n        return this.stateHistory[index];\r\n    }\r\n\r\n    setState(newState, historyMode = true){\r\n\r\n        // Save the old state\r\n        let oldState = this.state;\r\n\r\n        // Update the state\r\n        this.state = _.assign({}, oldState, newState);\r\n\r\n        // Loop through state properties looking for changes\r\n        let anyChanges = false;\r\n        for(let property in this.state){\r\n            let newProperty = this.state[property];\r\n            let oldProperty = oldState[property];\r\n\r\n            // If there is a change trigger the properties change callbacks\r\n            if(!areEqual(newProperty, oldProperty)){\r\n                this.triggerChangeCallbacks(property, newProperty, oldProperty);\r\n                anyChanges = true;\r\n            }\r\n        }\r\n\r\n        if(anyChanges){\r\n            //\r\n            this.state.__time = Date.now();\r\n\r\n            if(historyMode == true){\r\n                this.stateHistory.push(oldState);\r\n            }\r\n\r\n            this.triggerChangeCallbacks(\"__anyChange\", this.state, oldState);\r\n        }\r\n    }\r\n\r\n    subscribeToChanges(callback, property = \"__anyChange\"){\r\n        if(this.onChangeCallbacks[property] == undefined) this.onChangeCallbacks[property] = [];\r\n\r\n        if(typeof callback != \"function\"){\r\n            console.error(\"Callback given is not a function as expected\");\r\n        }else {\r\n            this.onChangeCallbacks[property].push(callback);\r\n        }\r\n    }\r\n\r\n    triggerChangeCallbacks(property, newValue, oldValue){\r\n        if(!this.onChangeCallbacks[property]) return;\r\n\r\n        this.onChangeCallbacks[property].forEach((callback)=>callback(newValue, oldValue, property));\r\n    }\r\n\r\n    unSubscribeToChanges(callback, property = \"__anyChange\"){\r\n        let callbackList = this.onChangeCallbacks[property];\r\n        if(callbackList == undefined) return;\r\n\r\n        this.onChangeCallbacks[property] = _.pull(callbackList, callback);\r\n    }\r\n}\r\n\r\nexport default Store;"]}